;; Analyzed by ClojureScript 1.7.170
{:use-macros {defroutes dogfort.middleware.routes-macros, POST dogfort.middleware.routes-macros, let-realised redlobster.macros, promise redlobster.macros, ANY dogfort.middleware.routes-macros, GET dogfort.middleware.routes-macros}, :excludes #{}, :name cv.core, :imports nil, :requires {redlobster.promise redlobster.promise, dogfort.middleware.defaults dogfort.middleware.defaults, job cv.job, redlobster.stream redlobster.stream, promise redlobster.promise, dogfort.middleware.routes dogfort.middleware.routes, cljs.nodejs cljs.nodejs, dogfort.http dogfort.http, cljs.pprint cljs.pprint, cv.job cv.job, defaults dogfort.middleware.defaults, stream redlobster.stream, cljs.reader cljs.reader}, :uses {pprint cljs.pprint, run-http dogfort.http, not-found dogfort.middleware.routes}, :defs {redirect {:protocol-inline nil, :meta {:file "/Users/matthew/clojure/whamtet-cv/src/cv/core.cljs", :line 19, :column 7, :end-line 19, :end-column 15, :arglists (quote ([location]))}, :name cv.core/redirect, :variadic false, :file "src/cv/core.cljs", :end-column 15, :method-params ([location]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([location]))}, handler {:name cv.core/handler, :file "src/cv/core.cljs", :line 24, :column 1, :end-line 24, :end-column 19, :meta {:file "/Users/matthew/clojure/whamtet-cv/src/cv/core.cljs", :line 24, :column 12, :end-line 24, :end-column 19}}, print-through {:protocol-inline nil, :meta {:file "/Users/matthew/clojure/whamtet-cv/src/cv/core.cljs", :line 51, :column 7, :end-line 51, :end-column 20, :arglists (quote ([handler]))}, :name cv.core/print-through, :variadic false, :file "src/cv/core.cljs", :end-column 20, :method-params ([handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([handler]))}, main {:protocol-inline nil, :meta {:file "/Users/matthew/clojure/whamtet-cv/src/cv/core.cljs", :line 56, :column 7, :end-line 56, :end-column 11, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cv.core/main, :variadic true, :file "src/cv/core.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}}, :require-macros {dogfort.middleware.routes-macros dogfort.middleware.routes-macros, redlobster.macros redlobster.macros, cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{:get :wrap-file :params :port :sym :headers :jobs :status :edn :post :body :end-stream?}, :order [:status :body :headers :jobs :post :params :edn :get :sym :end-stream? :wrap-file :port]}, :doc nil}