;; Analyzed by ClojureScript 1.7.170
{:use-macros {symzip dogfort.util.macros, let-realised redlobster.macros, promise redlobster.macros}, :excludes #{}, :name dogfort.middleware.multipart-params, :imports nil, :requires {stream redlobster.stream, redlobster.stream redlobster.stream, promise redlobster.promise, redlobster.promise redlobster.promise}, :uses nil, :defs {Busboy {:name dogfort.middleware.multipart-params/Busboy, :file "out/dogfort/middleware/multipart_params.cljs", :line 9, :column 1, :end-line 9, :end-column 12, :meta {:file "/Users/matthewmolloy/clojure/cv/out/dogfort/middleware/multipart_params.cljs", :line 9, :column 6, :end-line 9, :end-column 12}}, value-map {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cv/out/dogfort/middleware/multipart_params.cljs", :line 11, :column 7, :end-line 11, :end-column 16, :arglists (quote ([f m]))}, :name dogfort.middleware.multipart-params/value-map, :variadic false, :file "out/dogfort/middleware/multipart_params.cljs", :end-column 16, :method-params ([f m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f m]))}, wrap-multipart-params {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cv/out/dogfort/middleware/multipart_params.cljs", :line 14, :column 7, :end-line 14, :end-column 28, :arglists (quote ([handler]))}, :name dogfort.middleware.multipart-params/wrap-multipart-params, :variadic false, :file "out/dogfort/middleware/multipart_params.cljs", :end-column 28, :method-params ([handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([handler]))}}, :require-macros {dogfort.util.macros dogfort.util.macros, redlobster.macros redlobster.macros}, :cljs.analyzer/constants {:seen #{:params :headers :post :body :multipart-params :request-method}, :order [:body :request-method :post :headers :params :multipart-params]}, :doc nil}